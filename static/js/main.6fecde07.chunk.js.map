{"version":3,"sources":["Components/UI/Cards.js","Components/Expenses/ExpensesFilter.js","Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpenseList.js","Components/Charts/ChartBar.js","Components/Charts/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Cards","props","card","className","children","ExpensesFilter","value","selected","onChange","event","onDropdownChange","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpenseList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","newArray","filter","arrayItem","parseInt","selectedYear","ExpenseForm","inputTitle","newInputTitle","inputAmount","newInputAmount","inputDate","newInputDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setEditing","formExpenseData","onNewExpenseData","DUMMY_EXPENSES","App","setExpenses","newExpenseData","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fecde07.chunk.js","sourcesContent":["import './Cards.css';\r\n\r\nconst Cards=(props)=>{\r\n\r\n    const card='cards ' + props.className;\r\n\r\n    return <div className={card}>{props.children}</div>\r\n}\r\n\r\nexport default Cards;","import \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropDownSelect = (event) => {\r\n    props.onDropdownChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropDownSelect}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\"\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Cards from \"../UI/Cards\";\r\n\r\n\r\nconst ExpenseItem = (props) => {\r\n  const title=props.title;\r\n  const amount=props.amount;\r\n  const date=props.date;\r\n  \r\n  return (\r\n    <Cards className=\"expense-item\">\r\n      <ExpenseDate date={date}></ExpenseDate>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{title}</h2>\r\n      </div>\r\n      <div className=\"expense-item__price\">${amount}</div>\r\n      \r\n    </Cards>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import './ExpenseList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpenseList=(props)=>{\r\n\r\nif(props.items.length === 0){\r\n  return <h2 className=\"expenses-list__fallback\">No Items Found</h2>\r\n}\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n    {props.items.map((expense) => (\r\n    <ExpenseItem\r\n      key={expense.id}\r\n      title={expense.title}\r\n      amount={expense.amount}\r\n      date={expense.date}\r\n    />\r\n  ))}\r\n  \r\n  </ul>\r\n  )\r\n\r\n}\r\n\r\nexport default ExpenseList;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import Chart from \"../Charts/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"June\", value: 0 },\r\n    { label: \"July\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 }\r\n  ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n  return <div>\r\n\r\n  <Chart dataPoints={chartDataPoints}></Chart>\r\n  </div>;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import Cards from \"../UI/Cards\";\r\n\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport { useState } from \"react\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const dropDownChange = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const newArray = props.items.filter(\r\n    (arrayItem) => arrayItem.date.getFullYear() === parseInt(filteredYear)\r\n  );\r\n\r\n  return (\r\n    <li>\r\n    <div>\r\n      <Cards className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onDropdownChange={dropDownChange}\r\n        ></ExpensesFilter>\r\n        <ExpensesChart expenses={newArray}></ExpensesChart>\r\n        <ExpenseList items={newArray}></ExpenseList>  \r\n      </Cards>\r\n    </div></li>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  \r\n  const [inputTitle, newInputTitle] = useState(\"\");\r\n  const [inputAmount, newInputAmount] = useState(\"\");\r\n  const [inputDate, newInputDate] = useState(\"\");\r\n\r\n  const titleChangehandler = (event) => {\r\n    newInputTitle(event.target.value);\r\n  };\r\n  const amountChangehandler = (event) => {\r\n    newInputAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangehandler = (event) => {\r\n    newInputDate(event.target.value);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: inputTitle,\r\n      amount: inputAmount,\r\n      date: new Date(inputDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    \r\n    newInputTitle('');\r\n    newInputAmount('');\r\n    newInputDate('');\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label className=\"new-expense__control label\">Title</label>\r\n          <input\r\n            type=\"text\" value={inputTitle}\r\n            className=\"new-expense__control input\"\r\n            onChange={titleChangehandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label className=\"new-expense__control label\">Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\" value={inputAmount}\r\n            className=\"new-expense__control input\" onChange={amountChangehandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label className=\"new-expense__control label\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={inputDate}\r\n            className=\"new-expense__control input\" onChange={dateChangehandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n          <button type=\"submit\">Add Expense</button>\r\n          \r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import ExpenseForm from \"./ExpenseForm\";\r\nimport './NewExpense.css';\r\nimport {useState} from \"react\"\r\n\r\n\r\nconst NewExpense=(props)=>{\r\n\r\n  const [isEditing,setEditing]=useState(false);\r\n\r\n  const saveExpenseDataHandler=(formExpenseData)=>{\r\n    props.onNewExpenseData(formExpenseData);\r\n    setEditing(false);\r\n\r\n  };\r\n\r\n  const enableEditingHandler=()=>{\r\n    setEditing(true);\r\n  }\r\n  const disableEditingHandler=()=>{\r\n    setEditing(false);\r\n  }\r\n\r\n  return <div className=\"new-expense\">\r\n    {!isEditing && <button onClick={enableEditingHandler}>Add Expense</button>}\r\n    {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={disableEditingHandler}></ExpenseForm>}\r\n    </div>\r\n}\r\n\r\nexport default NewExpense;","import Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\nimport { useState } from \"react\";\n\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const newExpenseHandler = (newExpenseData) => {\n    \n    setExpenses((prevExpenses) => {\n      return [newExpenseData, ...prevExpenses];\n    });\n    \n  };\n\n  return (\n    <div>\n      <NewExpense onNewExpenseData={newExpenseHandler}></NewExpense>\n      \n\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}